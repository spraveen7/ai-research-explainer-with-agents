"""
Tutor Agent - Creates educational materials like flashcards and quizzes
"""
import os
from typing import Dict

class TutorAgent:
    def __init__(self, model_name: str = "gpt-4"):
        """Initialize the Tutor Agent"""
        self.openai_api_key = os.getenv("OPENAI_API_KEY")
        
        if not self.openai_api_key:
            raise ValueError("OPENAI_API_KEY not found in environment variables")
    
    def create_educational_materials(self, topic: str, summary_data: Dict) -> Dict:
        """
        Create educational materials for the topic
        
        Args:
            topic (str): The topic for educational materials
            summary_data (Dict): Summary data from the Summarizer Agent
            
        Returns:
            Dict: Educational materials including flashcards and quizzes
        """
        try:
            # Create educational materials structure
            materials = {
                "topic": topic,
                "flashcards": "Flashcards will be generated by CrewAI",
                "multiple_choice_questions": "MCQs will be created by CrewAI",
                "key_terms_glossary": "Glossary will be compiled by CrewAI",
                "learning_objectives": "Learning objectives will be defined by CrewAI",
                "further_learning": "Additional resources will be suggested by CrewAI",
                "status": "success"
            }
            
            return materials
            
        except Exception as e:
            return {
                "topic": topic,
                "materials": f"Error creating educational materials: {str(e)}",
                "status": "error"
            } 